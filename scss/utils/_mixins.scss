
@mixin iehack {
	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		@content;
	}
	.ie9 & {
		@content;
	}
}


@mixin b($block) {
	.#{$block} {
		@content;
	}
}

@mixin e($element) {
	$selector: &;
	@if containsModifier($selector) {
	$block: getBlock($selector);
		@at-root {
			#{$selector} {
				#{$block+$elementSeparator+$element} {
					@content;
				}
			}
		}
	} @else {
		@at-root {
			#{$selector+$elementSeparator+$element} {
				@content;
			}
		}
	}
}

@mixin m($modifier) {
	@at-root {
		#{&}#{$modifierSeparator+$modifier} {
			@content;
		}
	}
}



@mixin center-align($dir: false) {
	$map: (
		top:  ( Y ),
		left: ( X )
	);

	$val: map_get($map,$dir);

	@if map_get($map, $dir) != null {
		#{$dir}: 50%;
		transform: translate#{$val}(-50%);//#{"translate#{$val}(-50%)"};
	} @else {
		transform: translate(-50%,-50%);
		top: 50%;
		left: 50%;
	}
}


@mixin box($size: 2rem) {
	width: $size;
	height: $size;
}




/* GRID MIXINS */
@mixin calc-grid($index, $class) {

	$width: percentage(($index / $columns));

	.col--#{$class}-#{$index} {
		flex-basis: $width;
		max-width: $width;
		.no-flexbox & {
			width: $width;
			vertical-align: middle;
			display: inline-block;
		}
	}
	// .col-#{$class}-push-#{$index} {
	// 	left: $width;
	// }
	// .col-#{$class}-pull-#{$index} {
	// 	right: $width;
	// }
	.col-#{$class}-offset-#{$index} {
		margin-left: $width;
	}
}

@mixin make-grid($columns, $class) {
	@for $i from 0 through $columns {
		@include calc-grid($i, $class);
	}
}


@mixin btn( $bg: transparent, $color: palette(brand), $hoverbg: inherit, $hovercolor: #fff ) {
	@extend %btn;
	background: $bg;
	color: $color;

	&:hover{
		background: $hoverbg;
		color: $hovercolor;
	}

}

@mixin blendy($img, $color: null, $grad: null, $blend: multiply) {
  $img-path: url('#{$img}');
  @if $grad {
    background: $grad, $img-path;
  } @else {
    background-image: $img-path;
    background-color: $color;
  }
  background-blend-mode: $blend;
}
